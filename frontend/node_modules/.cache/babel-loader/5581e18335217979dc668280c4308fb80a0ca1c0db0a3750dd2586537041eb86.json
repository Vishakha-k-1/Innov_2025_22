{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anusuya\\\\VirtualHerbalGarden\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [plants, setPlants] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/plants\").then(response => response.json()).then(data => setPlants(data)).catch(error => console.error(\"Error fetching plants:\", error));\n  }, []);\n\n  // Group plants by category\n  const categorizedPlants = plants.reduce((acc, plant) => {\n    if (!acc[plant.category]) acc[plant.category] = [];\n    acc[plant.category].push(plant);\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Virtual Herbal Garden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), Object.keys(categorizedPlants).map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: categorizedPlants[category].map(plant => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: plant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), \" - \", plant.scientificName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), \"Benefits: \", plant.benefits.join(\", \")]\n        }, plant._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"gLr7j+f/M9K8FSUeLTOcFFeB2DY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Home","_s","plants","setPlants","fetch","then","response","json","data","catch","error","console","categorizedPlants","reduce","acc","plant","category","push","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","name","scientificName","benefits","join","_id","_c","$RefreshReg$"],"sources":["C:/Users/Anusuya/VirtualHerbalGarden/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction Home() {\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/plants\")\r\n      .then((response) => response.json())\r\n      .then((data) => setPlants(data))\r\n      .catch((error) => console.error(\"Error fetching plants:\", error));\r\n  }, []);\r\n\r\n  // Group plants by category\r\n  const categorizedPlants = plants.reduce((acc, plant) => {\r\n    if (!acc[plant.category]) acc[plant.category] = [];\r\n    acc[plant.category].push(plant);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div>\r\n      <h1>Virtual Herbal Garden</h1>\r\n      {Object.keys(categorizedPlants).map((category) => (\r\n        <div key={category}>\r\n          <h2>{category}</h2>\r\n          <ul>\r\n            {categorizedPlants[category].map((plant) => (\r\n              <li key={plant._id}>\r\n                <strong>{plant.name}</strong> - {plant.scientificName}\r\n                <br />\r\n                Benefits: {plant.benefits.join(\", \")}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,SAAS,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,iBAAiB,GAAGV,MAAM,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IACtD,IAAI,CAACD,GAAG,CAACC,KAAK,CAACC,QAAQ,CAAC,EAAEF,GAAG,CAACC,KAAK,CAACC,QAAQ,CAAC,GAAG,EAAE;IAClDF,GAAG,CAACC,KAAK,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACF,KAAK,CAAC;IAC/B,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,oBACEf,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BC,MAAM,CAACC,IAAI,CAACZ,iBAAiB,CAAC,CAACa,GAAG,CAAET,QAAQ,iBAC3CjB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAAmB,QAAA,EAAKF;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnBvB,OAAA;QAAAmB,QAAA,EACGN,iBAAiB,CAACI,QAAQ,CAAC,CAACS,GAAG,CAAEV,KAAK,iBACrChB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YAAAmB,QAAA,EAASH,KAAK,CAACW;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,OAAG,EAACP,KAAK,CAACY,cAAc,eACrD5B,OAAA;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,cACI,EAACP,KAAK,CAACa,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;QAAA,GAH7Bd,KAAK,CAACe,GAAG;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GAVGN,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CApCQD,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}