{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anusuya\\\\VirtualHerbalGarden\\\\frontend\\\\src\\\\pages\\\\Plants.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Plants = () => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [plants, setPlants] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/plants/${category}`).then(res => res.json()).then(data => setPlants(data)).catch(err => console.error(err));\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"2.5rem\",\n        marginBottom: \"20px\"\n      },\n      children: [category, \" Plants\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n        gap: \"20px\",\n        justifyContent: \"center\"\n      },\n      children: plants.length > 0 ? plants.map(plant => /*#__PURE__*/_jsxDEV(motion.div, {\n        style: {\n          borderRadius: \"10px\",\n          boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\n          background: \"#fff\",\n          padding: \"20px\",\n          textAlign: \"center\",\n          transition: \"0.3s\"\n        },\n        whileHover: {\n          scale: 1.05\n        },\n        whileTap: {\n          scale: 0.95\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: plant.image,\n          alt: plant.name,\n          style: {\n            width: \"100%\",\n            height: \"200px\",\n            objectFit: \"cover\",\n            borderRadius: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: \"1.5rem\",\n            marginTop: \"10px\"\n          },\n          children: plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Scientific Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this), \" \", plant.scientificName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Benefits:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 18\n          }, this), \" \", plant.benefits.join(\", \")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this)]\n      }, plant.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"1.2rem\"\n        },\n        children: \"No plants found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Plants, \"BYYRkkCij00ZJirIhQWklDsynVw=\", false, function () {\n  return [useParams];\n});\n_c = Plants;\nexport default Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["React","useEffect","useState","useParams","motion","jsxDEV","_jsxDEV","Plants","_s","category","plants","setPlants","fetch","then","res","json","data","catch","err","console","error","style","padding","children","textAlign","fontSize","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","justifyContent","length","map","plant","div","borderRadius","boxShadow","background","transition","whileHover","scale","whileTap","src","image","alt","name","width","height","objectFit","marginTop","scientificName","benefits","join","_c","$RefreshReg$"],"sources":["C:/Users/Anusuya/VirtualHerbalGarden/frontend/src/pages/Plants.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"; \r\nimport { useParams } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Plants = () => {\r\n  const { category } = useParams();\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/plants/${category}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setPlants(data))\r\n      .catch((err) => console.error(err));\r\n  }, [category]);\r\n\r\n  return (\r\n    <div style={{ padding: \"40px\" }}>\r\n      <h1 style={{ textAlign: \"center\", fontSize: \"2.5rem\", marginBottom: \"20px\" }}>\r\n        {category} Plants\r\n      </h1>\r\n\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n          gap: \"20px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        {plants.length > 0 ? (\r\n          plants.map((plant) => (\r\n            <motion.div\r\n              key={plant.name}\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                boxShadow: \"0 4px 8px rgba(0,0,0,0.2)\",\r\n                background: \"#fff\",\r\n                padding: \"20px\",\r\n                textAlign: \"center\",\r\n                transition: \"0.3s\",\r\n              }}\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <img\r\n                src={plant.image}\r\n                alt={plant.name}\r\n                style={{ width: \"100%\", height: \"200px\", objectFit: \"cover\", borderRadius: \"10px\" }}\r\n              />\r\n              <h2 style={{ fontSize: \"1.5rem\", marginTop: \"10px\" }}>{plant.name}</h2>\r\n              <p><strong>Scientific Name:</strong> {plant.scientificName}</p>\r\n              <p><strong>Benefits:</strong> {plant.benefits.join(\", \")}</p>\r\n            </motion.div>\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", fontSize: \"1.2rem\" }}>No plants found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Plants;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}