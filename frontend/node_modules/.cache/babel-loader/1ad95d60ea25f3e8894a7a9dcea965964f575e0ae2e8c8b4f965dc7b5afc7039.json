{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anusuya\\\\VirtualHerbalGarden\\\\frontend\\\\src\\\\pages\\\\Plants.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Plants() {\n  _s();\n  const {\n    category\n  } = useParams(); // Get category from URL\n  const [plants, setPlants] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/plants\").then(response => response.json()).then(data => {\n      // Filter plants based on the selected category\n      const filteredPlants = data.filter(plant => plant.category === category);\n      setPlants(filteredPlants);\n    }).catch(error => console.error(\"Error fetching plants:\", error));\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [category, \" Plants\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), plants.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: plants.map(plant => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: plant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), \" - \", plant.scientificName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), \"Benefits: \", plant.benefits.join(\", \")]\n      }, plant._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No plants found for this category.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Plants, \"BYYRkkCij00ZJirIhQWklDsynVw=\", false, function () {\n  return [useParams];\n});\n_c = Plants;\nexport default Plants;\nvar _c;\n$RefreshReg$(_c, \"Plants\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Plants","_s","category","plants","setPlants","fetch","then","response","json","data","filteredPlants","filter","plant","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","scientificName","benefits","join","_id","_c","$RefreshReg$"],"sources":["C:/Users/Anusuya/VirtualHerbalGarden/frontend/src/pages/Plants.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Plants() {\r\n  const { category } = useParams(); // Get category from URL\r\n  const [plants, setPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/plants\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Filter plants based on the selected category\r\n        const filteredPlants = data.filter((plant) => plant.category === category);\r\n        setPlants(filteredPlants);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching plants:\", error));\r\n  }, [category]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>{category} Plants</h1>\r\n      {plants.length > 0 ? (\r\n        <ul>\r\n          {plants.map((plant) => (\r\n            <li key={plant._id}>\r\n              <strong>{plant.name}</strong> - {plant.scientificName}\r\n              <br />\r\n              Benefits: {plant.benefits.join(\", \")}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No plants found for this category.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Plants;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,MAAMC,cAAc,GAAGD,IAAI,CAACE,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACV,QAAQ,KAAKA,QAAQ,CAAC;MAC1EE,SAAS,CAACM,cAAc,CAAC;IAC3B,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,GAAKd,QAAQ,EAAC,SAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBjB,MAAM,CAACkB,MAAM,GAAG,CAAC,gBAChBtB,OAAA;MAAAiB,QAAA,EACGb,MAAM,CAACmB,GAAG,CAAEV,KAAK,iBAChBb,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAASJ,KAAK,CAACW;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACR,KAAK,CAACY,cAAc,eACrDzB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,cACI,EAACR,KAAK,CAACa,QAAQ,CAACC,IAAI,CAAC,IAAI,CAAC;MAAA,GAH7Bd,KAAK,CAACe,GAAG;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELrB,OAAA;MAAAiB,QAAA,EAAG;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAjCQD,MAAM;EAAA,QACQH,SAAS;AAAA;AAAA+B,EAAA,GADvB5B,MAAM;AAmCf,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}